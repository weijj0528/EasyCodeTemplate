##引入mybatis支持
$!mybatisSupport

##设置保存名称与保存位置
$!callback.setFileName($tool.append($!{tableInfo.name}, "-Mapper.xml"))
$!callback.setSavePath($tool.append($modulePath, "/src/main/resources/",$!{tableInfo.savePackageName.replaceAll("\.", "/")},"/mapper"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end
#set($lowerTableName = $!{tool.firstLowerCase($tableInfo.name)})

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper">

    <resultMap type="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}" id="$!{lowerTableName}ResultMap">
#foreach($column in $tableInfo.fullColumn)
        <result property="$!column.name" column="$!column.obj.name" jdbcType="$!column.ext.jdbcType"/>
#end
    </resultMap>

    <sql id="$!{lowerTableName}BaseColumn">
#foreach($column in $tableInfo.fullColumn)
        t.`$column.obj.name`#if($velocityHasNext), #end

#end

    </sql>

#if($pk)
    <!--查询单个-->
    <select id="selectBy$!{tool.firstUpperCase($pk.name)}" resultMap="$!{lowerTableName}ResultMap">
        SELECT
        <include refid="$!{lowerTableName}BaseColumn"/>
        FROM `$!tableInfo.obj.name` t
        WHERE t.`$!pk.obj.name` = #{$!pk.name}#if($logicDelete) AND t.`${logicDelete.obj.name}` = 0#end
        
    </select>

    <select id="selectBy$!{tool.firstUpperCase($pk.name)}s" resultMap="$!{tool.firstLowerCase($tableInfo.name)}ResultMap">
        SELECT
        <include refid="$!{lowerTableName}BaseColumn"/>
        FROM `$!tableInfo.obj.name` t
        WHERE t.`$!pk.obj.name` in (<foreach collection="list" index="index" item="item" separator=",">#{item}</foreach>)
#if($logicDelete)
        AND t.`${logicDelete.obj.name}` = 0
#end
        
    </select>

    <update id="updateBy$!{tool.firstUpperCase($pk.name)}" parameterType="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}">
        UPDATE `$!{tableInfo.obj.name}`
        <set>
#foreach($column in $tableInfo.otherColumn)
#if($column.name.startsWith("update") && $column.type.equals("java.util.Date"))
            `$column.obj.name` = now(),
#elseif(!($column.name.startsWith("create") && $column.type.equals("java.util.Date")))
            <if test="$!column.name != null#if($column.type.equals("java.lang.String")) and $!column.name != ''#end">
                `$!column.obj.name` = #{$!column.name},
            </if>
#end
#end
        </set>
        WHERE `$!pk.obj.name` = #{$!pk.name}
    </update>
#end

    <sql id="${lowerTableName}QueryCondition">
#foreach($column in $tableInfo.fullColumn)
#if($tool.isIndexColumn($column.obj))
        <if test="q.$!column.name != null#if($column.type.equals("java.lang.String")) and q.$!column.name != ''#end">
            AND t.`$!column.obj.name` = #{q.$!column.name}
        </if>
#end
#end
    #if($logicDelete)
        AND t.`${logicDelete.obj.name}` = 0
    #end

    </sql>

    <!--通过实体作为筛选条件查询-->
    <select id="selectOne" resultMap="$!{lowerTableName}ResultMap">
        SELECT
        <include refid="$!{lowerTableName}BaseColumn"/>
        FROM `$!tableInfo.obj.name` t
        <where>
            <include refid="${lowerTableName}QueryCondition"/>
        </where>
        LIMIT 1
    </select>
    
    <select id="select" resultMap="$!{lowerTableName}ResultMap">
        SELECT
        <include refid="$!{lowerTableName}BaseColumn"/>
        FROM `$!tableInfo.obj.name` t
        <where>
            <include refid="${lowerTableName}QueryCondition"/>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="$!pk.name" useGeneratedKeys="true">
        insert into `$!{tableInfo.obj.name}`(
#foreach($column in $tableInfo.otherColumn)
            `$!column.obj.name`#if($velocityHasNext), #end

#end
        ) VALUES (
#foreach($column in $tableInfo.otherColumn)
#if(($column.name.startsWith("update")||$column.name.startsWith("create")) && $column.type.equals("java.util.Date"))
        now()#if($velocityHasNext), #end

#else
        #{$!{column.name}}#if($velocityHasNext), #end

#end
#end
        )
    </insert>

    <insert id="insertBatch" keyProperty="$!pk.name" useGeneratedKeys="true">
        insert into `$!{tableInfo.obj.name}`(
#foreach($column in $tableInfo.otherColumn)
            `$!column.obj.name`#if($velocityHasNext), #end

#end
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
        (
#foreach($column in $tableInfo.otherColumn)
#if(($column.name.startsWith("update")||$column.name.startsWith("create")) && $column.type.equals("java.util.Date"))
                now()#if($velocityHasNext), #end
#else
                #{item.$!{column.name}}#if($velocityHasNext), #end
#end

#end
        )
        </foreach>
    </insert>
    
#if($logicDelete)
    <update id="logicDeleteBy${tool.firstUpperCase($pk.name)}">
        UPDATE `${tableInfo.obj.name}` set `is_del` = 1, update_time = now() where `id` = #{id}
    </update>

    <update id="logicDeleteBy${tool.firstUpperCase($pk.name)}s">
        UPDATE `${tableInfo.obj.name}` set `is_del` = 1, update_time = now() where id in (<foreach collection="list" index="index"
                                                                                       item="item" separator=",">
            #{item}
        </foreach>)
    </update>
#end

</mapper>